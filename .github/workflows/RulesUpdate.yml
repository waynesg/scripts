name: Update OpenClash Rules

on:
  schedule:
    # 定时任务，这里以每天凌晨0点为例
    - cron: '0 0 * * *'
  workflow_dispatch:
    # 允许手动触发
    inputs:
      reason:
        description: 'Reason for manual dispatch'
        required: false
        default: 'Manual update'

jobs:
  update-file:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Download unbreak-classical.yaml
      run: |
        curl -o rules/unbreak-classical.yaml https://raw.githubusercontent.com/qoli/SyncnextClash/main/Unbreak-classical.yaml
        echo "Downloaded unbreak-classical.yaml"

    - name: Download proxy-classical.yaml
      run: |
        curl -o rules/proxy-classical.yaml https://raw.githubusercontent.com/qoli/SyncnextClash/main/proxy-classical.yaml
        echo "Downloaded proxy-classical.yaml"

    - name: Clean and merge unbreak-classical.yaml into custom_direct.yaml
      run: |
        echo "# Cleaning and merging unbreak-classical.yaml into custom_direct.yaml"
        cleaned_rules=$(sed '/^#!.*$/d; /^payload:/d' rules/unbreak-classical.yaml)
        echo "$cleaned_rules" | grep -Fxv -f rules/custom_direct.yaml > temp_rules.txt
        if [ -s temp_rules.txt ]; then
          echo "$cleaned_rules" >> rules/custom_direct.yaml
          echo "Merged cleaned content from unbreak-classical.yaml into custom_direct.yaml"
        else
          echo "No new rules to add from unbreak-classical.yaml"
        fi
        rm temp_rules.txt

    - name: Remove duplicates from custom_direct.yaml
      run: |
        echo "# Removing duplicates from custom_direct.yaml"
        sort -u rules/custom_direct.yaml -o rules/custom_direct.yaml
        echo "Duplicates removed from custom_direct.yaml"

    - name: Clean and merge proxy-classical.yaml into custom_proxy.yaml
      run: |
        echo "# Cleaning and merging proxy-classical.yaml into custom_proxy.yaml"
        cleaned_rules=$(sed '/^#!.*$/d; /^payload:/d' rules/proxy-classical.yaml)
        echo "$cleaned_rules" | grep -Fxv -f rules/custom_proxy.yaml > temp_rules.txt
        if [ -s temp_rules.txt ]; then
          echo "$cleaned_rules" >> rules/custom_proxy.yaml
          echo "Merged cleaned content from proxy-classical.yaml into custom_proxy.yaml"
        else
          echo "No new rules to add from proxy-classical.yaml"
        fi
        rm temp_rules.txt

    - name: Remove duplicates from custom_proxy.yaml
      run: |
        echo "# Removing duplicates from custom_proxy.yaml"
        sort -u rules/custom_proxy.yaml -o rules/custom_proxy.yaml
        echo "Duplicates removed from custom_proxy.yaml"

    - name: Delete unbreak-classical.yaml and proxy-classical.yaml
      run: |
        echo "Deleting unbreak-classical.yaml and proxy-classical.yaml"
        rm rules/unbreak-classical.yaml rules/proxy-classical.yaml

    - name: Commit and push changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add rules/custom_direct.yaml rules/custom_proxy.yaml
        git commit -m "Merged and deleted unbreak-classical.yaml and proxy-classical.yaml" || echo "No changes to commit"
        git push
      
    - name: Fetch Updates for Rules
      run: |
        declare -A files
        files["ai.yaml"]="https://raw.githubusercontent.com/DustinWin/ruleset_geodata/clash-ruleset/ai.yaml"
        files["networktest.yaml"]="https://raw.githubusercontent.com/DustinWin/ruleset_geodata/clash-ruleset/networktest.yaml"
        #files["unbreak-classical.yaml"]="https://raw.githubusercontent.com/qoli/SyncnextClash/main/Unbreak-classical.yaml"
        #files["proxy-classical.yaml"]="https://raw.githubusercontent.com/qoli/SyncnextClash/main/proxy-classical.yaml"
        
        for file in "${!files[@]}"; do
          curl -o rules/$file ${files[$file]}
          if [[ -s rules/$file ]]; then
            # Add comments to the top of the file
            sed -i "1i#!name = ${file%.yaml}" rules/$file
            sed -i "2i#!date = $(date +'%Y-%m-%d %H:%M:%S')" rules/$file
            sed -i "3i#!" rules/$file
          else
            echo "Failed to download ${file}. Keeping the existing version."
            rm -f rules/$file
          fi
        done

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add rules/*.yaml
        if git diff-index --quiet HEAD; then
          echo "No changes to commit"
        else
          git commit -m 'Update Rules files'
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
